#! /usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require "fog"
require "fileutils"
require 'trollop'
require 'yaml'


def set_environment(environment)
	environments[environment]
end

def environments
	YAML::load_file(File.join(File.dirname(File.expand_path(__FILE__)), 'config.yml'))
end

opts = Trollop::options do
	opt :environment, "", :type => :string
	opt :value, "", :type => :string
	opt :key, "", :type => :string
	opt :backup, ""
	opt :delete, ""
end	
Trollop::die :environment, "needs an environment. Valid values(#{environments.keys.join(',')})" unless environments.keys.include? opts[:environment]


settings = set_environment(opts[:environment]).merge(:provider => 'AWS')
cfm = Fog::Compute.new(settings)
volumes = cfm.volumes.all



volumes.select!{|vol|vol.tags[opts[:key]] == opts[:value]}	unless opts[:key].to_s.empty?

volumes.each do |volume| 
	puts volume.id
end

if opts[:backup]
	volumes.each do |volume| 
		response = cfm.create_snapshot(volume.id)
     	snapshot = cfm.snapshots.get(response.body['snapshotId'])
     	cfm.tags.create(:resource_id => snapshot.id, :key => "Name", :value => "#{volume.id} #{DateTime.now.to_date}")
     	cfm.tags.create(:resource_id => snapshot.id, :key => "Date", :value => DateTime.now.to_date)
     	cfm.tags.create(:resource_id => snapshot.id, :key => "Volume", :value => volume.id)
	end	
end






